Git is a distributed version control system
Git is free software distributed under the GPL
Git has a mutable index called stage
Git tracks changes of files
Creating a new branch is quick and simple

进入一个目录
git init

git add 
git commit 

您的姓名和邮件地址基于登录名和主机名进行了自动设置。请检查它们正确
与否。您可以通过下面的命令对其进行明确地设置以免再出现本提示信息：

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

设置完毕后，您可以用下面的命令来修正本次提交所使用的用户身份：

    git commit --amend --reset-author


git 每次修改文件后提交都需要
git add
git commit

git log 			查看提交日志
git log --pretty=oneline	没次提交日志用一行显示

版本回退:
git reset 
git reset --hard HEAD^		HEAD^表示上一个版本，HEAD^^表示上上个版本，HEAD~100表示上一百个版本
git reflog			查看历史命令可以查到要回退的版本号
git reset --hard <版本号>

管理修改:
git diff HEAD -- <filename>	查看工作区和版本库里面最新版本的区别

撤销修改:
git checkout -- <filename>	撤销工作区的修改，如果还没有git add
git reset HEAD <filename>	撤销git add到缓存区的修改，之后在使用git checkout -- <filename>撤销工作区的修改

删除文件:
git rm <filename>
git commit -m " "

关联远程库(github):
git remote add origin git@github.com:c825656416/learngit.git
git push -u origin master	第一次推送master分支
git push origin master		以后推送就不需要加 -u 参数

从远程仓库克隆:
git clone git@github.com:c825656416/gitskills.git

分支管理:
git checkout -b dev		创建并切换到分支dev，相当与如下两条命令:
git branch dev
git checkout dev
git branch			列出所有分支和当前分支
git merger <branch>		合并指定分支到当前分支
git branch -d <branch>		删除分支
git branch -D <branch>		强行删除一个没有合并的分支
git push origin :<branch>	删除远程分支，push一个空分支

git merge --no-ff -m " " <branch>	不使用fast forward模式合并分支

git stash 			暂时隐藏当前分支现场
git stash list			列出当前分支隐藏的现场
git stach pop			恢复当前分支现场

git remote -v			查看远程仓库

多人协作:
git checkout -b <branch> remote/<branch>	在本地创建和远程分支对应的分支
git push origin <branch>	推送自己修改的分支，如果推送失败
git pull			试图合并，如果提示 no tracking information
git branch --set-upstream <branch> origin/<branch>	再pull
git pull			如果merge出错，手动解决冲突，在提交本地
git push origin <branch>

创建标签:
git tag <tagname>		新建一个标签，默认为HEAD，也可以指定一个commit id
git tag -a <tagname> -m " "	指定标签信息
git tag				查看所有标签
git show <tagneme>		查看指定标签信息

管理远程标签:
git push origin <tagname>	推送一个本地标签
git push origin --tags		推送全部未推送的标签
git tag -d <tagname>		删除一个本地标签
git push tag :refs/tags/<tagname>	删除一个远程标签

自定义Git
git config --global color.ui true	显示颜色

忽略特定文件:
编辑 .gitignore 文件，加入仓库

配置别名
git config --global alias.st status
git config --global alias.ci commit
git config --global alias.br branch
git config --global alias.ubstage "reset HEAD"
git config --global alias.last "log -1"
配置文件存放在 .git/config 文件中

搭建Git服务器:
sudo adduser git
拷贝需要登陆用户的公钥到 /home/git/.ssh/authorized_keys
sudo git init --bare simple.git		创建一个空仓库
sudo chown -R git:git sample.git
修改 /etc/passwd 下 git 用户的登陆shell 为 git-shell
